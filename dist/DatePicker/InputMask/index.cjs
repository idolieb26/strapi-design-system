"use strict";const q=require("react"),Z=require("react-dom"),ee=require("prop-types"),C=require("./hooks.cjs"),E=require("./validate-props.cjs"),te=require("./utils/defer.cjs"),w=require("./utils/input.cjs"),P=require("./utils/helpers.cjs"),ne=require("./utils/mask.cjs"),ae=require("./children-wrapper.cjs"),X=d=>d&&typeof d=="object"&&"default"in d?d:{default:d},B=X(q),s=X(ee),V=q.forwardRef(function(e,h){const{alwaysShowMask:k,children:M,mask:x,maskPlaceholder:Y,beforeMaskedStateChange:c,...D}=e;E.validateMaxLength(e),E.validateMaskPlaceholder(e);const o=new ne({mask:x,maskPlaceholder:Y}),i=!!x,b=!D.disabled&&!D.readOnly,S=e.value!==null&&e.value!==void 0,$=C.usePrevious(i),N=P.toString((S?e.value:e.defaultValue)||""),{inputRef:y,getInputState:r,setInputState:f,getLastInputState:m}=C.useInputState(N,i),F=C.useInputElement(y);function H(t){const u=r(),a=m();let l=o.processChange(u,a);c&&(l=c({currentState:u,previousState:a,nextState:l})),f(l),e.onChange&&e.onChange(t)}function R(t){y.current=t.target;const u=r().value;if(i&&!o.isValueFilled(u)){let a=o.formatValue(u),l=o.getDefaultSelectionForValue(a),n={value:a,selection:l};c&&(n=c({currentState:r(),nextState:n}),a=n.value,l=n.selection),f(n),a!==u&&e.onChange&&e.onChange(t),te.defer(()=>{f(m())})}e.onFocus&&e.onFocus(t)}function U(t){const u=r().value,a=m().value;if(i&&!k&&o.isValueEmpty(a)){let l="",n={value:l,selection:{start:null,end:null}};c&&(n=c({currentState:r(),nextState:n}),l=n.value),f(n),l!==u&&e.onChange&&e.onChange(t)}e.onBlur&&e.onBlur(t)}function W(t){const u=F(),{value:a}=r(),l=P.getElementDocument(u);if(!w.isInputFocused(u)&&!o.isValueFilled(a)){const n=t.clientX,I=t.clientY,g=new Date().getTime(),v=p=>{if(l.removeEventListener("mouseup",v),!w.isInputFocused(u))return;const G=Math.abs(p.clientX-n),J=Math.abs(p.clientY-I),L=Math.max(G,J),O=new Date().getTime()-g;if(L<=10&&O<=200||L<=5&&O<=300){const _=m(),K=o.getDefaultSelectionForValue(_.value),Q={..._,selection:K};f(Q)}};l.addEventListener("mouseup",v)}e.onMouseDown&&e.onMouseDown(t)}if(i&&S){const t=F();let a=t&&w.isInputFocused(t)||k||e.value?o.formatValue(e.value):e.value;c&&(a=c({nextState:{value:a,selection:{start:null,end:null}}}).value),f({...m(),value:a})}const j=m(),z=j.selection,A=j.value;q.useLayoutEffect(()=>{if(!i)return;const t=F(),u=w.isInputFocused(t),a=z,l=r();let n={...l};if(!S){const I=l.value,g=o.formatValue(I),v=o.isValueEmpty(g);!v||u||k?n.value=g:v&&!u&&(n.value="")}u&&!$?n.selection=o.getDefaultSelectionForValue(n.value):S&&u&&a&&a.start!==null&&a.end!==null&&(n.selection=a),c&&(n=c({currentState:l,nextState:n})),f(n)});const T={...D,onFocus:R,onBlur:U,onChange:i&&b?H:e.onChange,onMouseDown:i&&b?W:e.onMouseDown,ref:t=>{y.current=Z.findDOMNode(t),P.isFunction(h)?h(t):h!==null&&typeof h=="object"&&(h.current=t)},value:i&&S?A:e.value};return M?(E.validateChildren(e,M),B.default.createElement(ae,{...T},M)):B.default.createElement("input",{...T})});V.displayName="InputMask";V.defaultProps={alwaysShowMask:!1,maskPlaceholder:"_"};V.propTypes={alwaysShowMask:s.default.bool,beforeMaskedStateChange:s.default.func,children:s.default.element,mask:s.default.oneOfType([s.default.string,s.default.arrayOf(s.default.oneOfType([s.default.string,s.default.instanceOf(RegExp)]))]),maskPlaceholder:s.default.string,onFocus:s.default.func,onBlur:s.default.func,onChange:s.default.func,onMouseDown:s.default.func};module.exports=V;
